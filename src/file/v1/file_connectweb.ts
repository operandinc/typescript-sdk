// @generated by protoc-gen-connect-web v0.7.0 with parameter "target=ts"
// @generated from file file/v1/file.proto (package file.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AttachSyncRequest, AttachSyncResponse, CreateFileRequest, CreateFileResponse, DeleteFileRequest, DeleteFileResponse, DeleteSyncRequest, DeleteSyncResponse, GetFileRequest, GetFileResponse, ImportFromURLRequest, ImportFromURLResponse, ListFilesRequest, ListFilesResponse, ShareFileRequest, ShareFileResponse, UnshareFileRequest, UnshareFileResponse, UpdateFileRequest, UpdateFileResponse } from "./file_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * FileService provides access to files.
 *
 * @generated from service file.v1.FileService
 */
export const FileService = {
  typeName: "file.v1.FileService",
  methods: {
    /**
     * GetFile returns a specific file given its ID.
     *
     * @generated from rpc file.v1.FileService.GetFile
     */
    getFile: {
      name: "GetFile",
      I: GetFileRequest,
      O: GetFileResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListFiles returns a list of files, paginated.
     *
     * @generated from rpc file.v1.FileService.ListFiles
     */
    listFiles: {
      name: "ListFiles",
      I: ListFilesRequest,
      O: ListFilesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateFile creates a new file.
     *
     * @generated from rpc file.v1.FileService.CreateFile
     */
    createFile: {
      name: "CreateFile",
      I: CreateFileRequest,
      O: CreateFileResponse,
      kind: MethodKind.ClientStreaming,
    },
    /**
     * ImportFromURL imports a file from a URL. The file will be downloaded
     * and stored under a certain path.
     *
     * @generated from rpc file.v1.FileService.ImportFromURL
     */
    importFromURL: {
      name: "ImportFromURL",
      I: ImportFromURLRequest,
      O: ImportFromURLResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteFile deletes a file.
     *
     * @generated from rpc file.v1.FileService.DeleteFile
     */
    deleteFile: {
      name: "DeleteFile",
      I: DeleteFileRequest,
      O: DeleteFileResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateFile updates a file.
     *
     * @generated from rpc file.v1.FileService.UpdateFile
     */
    updateFile: {
      name: "UpdateFile",
      I: UpdateFileRequest,
      O: UpdateFileResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ShareFile shares a file with another user.
     *
     * @generated from rpc file.v1.FileService.ShareFile
     */
    shareFile: {
      name: "ShareFile",
      I: ShareFileRequest,
      O: ShareFileResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UnshareFile deletes an existing share of a file with another user.
     *
     * @generated from rpc file.v1.FileService.UnshareFile
     */
    unshareFile: {
      name: "UnshareFile",
      I: UnshareFileRequest,
      O: UnshareFileResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AttachSync attaches a Sync to a file.
     * If the file isn't a folder, or the folder already has an attached Sync,
     * this operation will fail.
     *
     * @generated from rpc file.v1.FileService.AttachSync
     */
    attachSync: {
      name: "AttachSync",
      I: AttachSyncRequest,
      O: AttachSyncResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteSync deletes an Sync. The file contents of the folder
     * will be kept, but no further updates will be made.
     *
     * @generated from rpc file.v1.FileService.DeleteSync
     */
    deleteSync: {
      name: "DeleteSync",
      I: DeleteSyncRequest,
      O: DeleteSyncResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

