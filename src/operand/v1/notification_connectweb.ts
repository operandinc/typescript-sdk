// @generated by protoc-gen-connect-web v0.2.1 with parameter "target=ts"
// @generated from file operand/v1/notification.proto (package operand.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {AcknowledgeRequest, AcknowledgeResponse, PendingRequest, PendingResponse, SettingsRequest, SettingsResponse, UpdateSettingsRequest, UpdateSettingsResponse} from "./notification_pb.js";
import {MethodKind} from "@bufbuild/protobuf";

/**
 * NotificationService manages notifications sent to users. Users are notified
 * when things happen that are relevant to them, and they can configure notification
 * settings (i.e. emails, push notifications, etc.) to control how they are notified.
 * This service authentication via API key, set in the `Authorization` header.
 *
 * @generated from service operand.v1.NotificationService
 */
export const NotificationService = {
  typeName: "operand.v1.NotificationService",
  methods: {
    /**
     * Pending returns a list of pending notifications for the user.
     *
     * @generated from rpc operand.v1.NotificationService.Pending
     */
    pending: {
      name: "Pending",
      I: PendingRequest,
      O: PendingResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Acknowledge acknowledges one or more notifications.
     *
     * @generated from rpc operand.v1.NotificationService.Acknowledge
     */
    acknowledge: {
      name: "Acknowledge",
      I: AcknowledgeRequest,
      O: AcknowledgeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Settings returns the notification settings for the user.
     *
     * @generated from rpc operand.v1.NotificationService.Settings
     */
    settings: {
      name: "Settings",
      I: SettingsRequest,
      O: SettingsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateSettings updates the notification settings for the user.
     *
     * @generated from rpc operand.v1.NotificationService.UpdateSettings
     */
    updateSettings: {
      name: "UpdateSettings",
      I: UpdateSettingsRequest,
      O: UpdateSettingsResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

