// @generated by protoc-gen-es v0.1.1 with parameter "target=ts+js"
// @generated from file operand/v1/notification.proto (package operand.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {proto3, Timestamp} from "@bufbuild/protobuf";

/**
 * PendingRequest is the request for the Pending method.
 *
 * @generated from message operand.v1.PendingRequest
 */
export const PendingRequest = proto3.makeMessageType(
  "operand.v1.PendingRequest",
  () => [
    { no: 1, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "cursor", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * NotificationAction contains an action that can be taken on a notification.
 *
 * @generated from message operand.v1.NotificationAction
 */
export const NotificationAction = proto3.makeMessageType(
  "operand.v1.NotificationAction",
  () => [
    { no: 1, name: "none", kind: "message", T: NotificationAction_None, oneof: "action" },
    { no: 2, name: "redirect_to", kind: "message", T: NotificationAction_RedirectTo, oneof: "action" },
  ],
);

/**
 * @generated from message operand.v1.NotificationAction.None
 */
export const NotificationAction_None = proto3.makeMessageType(
  "operand.v1.NotificationAction.None",
  [],
  {localName: "NotificationAction_None"},
);

/**
 * @generated from message operand.v1.NotificationAction.RedirectTo
 */
export const NotificationAction_RedirectTo = proto3.makeMessageType(
  "operand.v1.NotificationAction.RedirectTo",
  () => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "NotificationAction_RedirectTo"},
);

/**
 * Notification is a notification sent to a user.
 *
 * @generated from message operand.v1.Notification
 */
export const Notification = proto3.makeMessageType(
  "operand.v1.Notification",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "action", kind: "message", T: NotificationAction },
  ],
);

/**
 * PendingResponse is the response for the Pending method.
 *
 * @generated from message operand.v1.PendingResponse
 */
export const PendingResponse = proto3.makeMessageType(
  "operand.v1.PendingResponse",
  () => [
    { no: 1, name: "notifications", kind: "message", T: Notification, repeated: true },
    { no: 2, name: "next_cursor", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * AcknowledgeRequest is the request for the Acknowledge method.
 *
 * @generated from message operand.v1.AcknowledgeRequest
 */
export const AcknowledgeRequest = proto3.makeMessageType(
  "operand.v1.AcknowledgeRequest",
  () => [
    { no: 1, name: "ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * AcknowledgeResponse is the response for the Acknowledge method.
 *
 * @generated from message operand.v1.AcknowledgeResponse
 */
export const AcknowledgeResponse = proto3.makeMessageType(
  "operand.v1.AcknowledgeResponse",
  [],
);

/**
 * NotificationSettings contains the notification settings for a user.
 *
 * @generated from message operand.v1.NotificationSettings
 */
export const NotificationSettings = proto3.makeMessageType(
  "operand.v1.NotificationSettings",
  () => [
    { no: 1, name: "emails", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * SettingsRequest is the request for the Settings method.
 *
 * @generated from message operand.v1.SettingsRequest
 */
export const SettingsRequest = proto3.makeMessageType(
  "operand.v1.SettingsRequest",
  [],
);

/**
 * SettingsResponse is the response for the Settings method.
 *
 * @generated from message operand.v1.SettingsResponse
 */
export const SettingsResponse = proto3.makeMessageType(
  "operand.v1.SettingsResponse",
  () => [
    { no: 1, name: "settings", kind: "message", T: NotificationSettings },
  ],
);

/**
 * UpdateSettingsRequest is the request for the UpdateSettings method.
 *
 * @generated from message operand.v1.UpdateSettingsRequest
 */
export const UpdateSettingsRequest = proto3.makeMessageType(
  "operand.v1.UpdateSettingsRequest",
  () => [
    { no: 1, name: "settings", kind: "message", T: NotificationSettings },
  ],
);

/**
 * UpdateSettingsResponse is the response for the UpdateSettings method.
 *
 * @generated from message operand.v1.UpdateSettingsResponse
 */
export const UpdateSettingsResponse = proto3.makeMessageType(
  "operand.v1.UpdateSettingsResponse",
  [],
);

