// @generated by protoc-gen-es v0.1.1 with parameter "target=ts+js"
// @generated from file operand/v1/operand.proto (package operand.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {proto3, Timestamp} from "@bufbuild/protobuf";
import {Answer, Object$, ObjectOptions, Properties} from "./object_pb.js";
import {Index, IndexOptions} from "./index_pb.js";

/**
 * PaginationParams are the parameters used to paginate a feed.
 *
 * @generated from message operand.v1.PaginationParams
 */
export const PaginationParams = proto3.makeMessageType(
  "operand.v1.PaginationParams",
  () => [
    { no: 1, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "latest_time", kind: "message", T: Timestamp, opt: true },
  ],
);

/**
 * FeedRequest is the request object for the Feed RPC.
 *
 * @generated from message operand.v1.FeedRequest
 */
export const FeedRequest = proto3.makeMessageType(
  "operand.v1.FeedRequest",
  () => [
    { no: 1, name: "specific_index_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "pagination_params", kind: "message", T: PaginationParams, opt: true },
    { no: 3, name: "object_options", kind: "message", T: ObjectOptions, opt: true },
    { no: 4, name: "index_options", kind: "message", T: IndexOptions, opt: true },
  ],
);

/**
 * FeedResponse is the response object for the Feed RPC.
 *
 * @generated from message operand.v1.FeedResponse
 */
export const FeedResponse = proto3.makeMessageType(
  "operand.v1.FeedResponse",
  () => [
    { no: 1, name: "feed_objects", kind: "message", T: FeedResponse_FeedObject, repeated: true },
    { no: 2, name: "indexes", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Index} },
  ],
);

/**
 * @generated from message operand.v1.FeedResponse.FeedObject
 */
export const FeedResponse_FeedObject = proto3.makeMessageType(
  "operand.v1.FeedResponse.FeedObject",
  () => [
    { no: 1, name: "index_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "object", kind: "message", T: Object$ },
  ],
  {localName: "FeedResponse_FeedObject"},
);

/**
 * SearchRequest is the request object for the Search RPC.
 *
 * @generated from message operand.v1.SearchRequest
 */
export const SearchRequest = proto3.makeMessageType(
  "operand.v1.SearchRequest",
  () => [
    { no: 1, name: "index_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "attempt_answer", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "object_options", kind: "message", T: ObjectOptions, opt: true },
    { no: 6, name: "index_options", kind: "message", T: IndexOptions, opt: true },
  ],
);

/**
 * SearchResponse is the response object for the Search RPC.
 *
 * @generated from message operand.v1.SearchResponse
 */
export const SearchResponse = proto3.makeMessageType(
  "operand.v1.SearchResponse",
  () => [
    { no: 1, name: "results", kind: "message", T: SearchResponse_Result, repeated: true },
    { no: 2, name: "objects", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Object$} },
    { no: 3, name: "indexes", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Index} },
    { no: 4, name: "answer", kind: "message", T: Answer, opt: true },
  ],
);

/**
 * @generated from message operand.v1.SearchResponse.Result
 */
export const SearchResponse_Result = proto3.makeMessageType(
  "operand.v1.SearchResponse.Result",
  () => [
    { no: 1, name: "index_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "object_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "extra", kind: "message", T: Properties, opt: true },
  ],
  {localName: "SearchResponse_Result"},
);

/**
 * PublicIndexesRequest is the request object for the PublicIndexes RPC.
 *
 * @generated from message operand.v1.PublicIndexesRequest
 */
export const PublicIndexesRequest = proto3.makeMessageType(
  "operand.v1.PublicIndexesRequest",
  () => [
    { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "index_options", kind: "message", T: IndexOptions, opt: true },
  ],
);

/**
 * PublicIndexesResponse is the response object for the PublicIndexes RPC.
 *
 * @generated from message operand.v1.PublicIndexesResponse
 */
export const PublicIndexesResponse = proto3.makeMessageType(
  "operand.v1.PublicIndexesResponse",
  () => [
    { no: 1, name: "indexes", kind: "message", T: Index, repeated: true },
  ],
);

