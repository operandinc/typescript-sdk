// @generated by protoc-gen-es v0.1.1 with parameter "target=ts+js"
// @generated from file index/v1/index.proto (package index.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {proto3, Timestamp} from "@bufbuild/protobuf";

/**
 * @generated from enum index.v1.ObjectType
 */
export const ObjectType = proto3.makeEnum(
  "index.v1.ObjectType",
  [
    {no: 0, name: "OBJECT_TYPE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "OBJECT_TYPE_COLLECTION", localName: "COLLECTION"},
    {no: 2, name: "OBJECT_TYPE_TEXT", localName: "TEXT"},
    {no: 3, name: "OBJECT_TYPE_HTML", localName: "HTML"},
    {no: 4, name: "OBJECT_TYPE_IMAGE", localName: "IMAGE"},
    {no: 5, name: "OBJECT_TYPE_PDF", localName: "PDF"},
    {no: 6, name: "OBJECT_TYPE_AUDIO", localName: "AUDIO"},
    {no: 7, name: "OBJECT_TYPE_SLACK", localName: "SLACK"},
  ],
);

/**
 * @generated from enum index.v1.ObjectStatus
 */
export const ObjectStatus = proto3.makeEnum(
  "index.v1.ObjectStatus",
  [
    {no: 0, name: "OBJECT_STATUS_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "OBJECT_STATUS_QUEUED", localName: "QUEUED"},
    {no: 2, name: "OBJECT_STATUS_INDEXING", localName: "INDEXING"},
    {no: 3, name: "OBJECT_STATUS_READY", localName: "READY"},
    {no: 4, name: "OBJECT_STATUS_ERROR", localName: "ERROR"},
  ],
);

/**
 * @generated from message index.v1.UpsertObjectRequest
 */
export const UpsertObjectRequest = proto3.makeMessageType(
  "index.v1.UpsertObjectRequest",
  () => [
    { no: 1, name: "existing_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "parent_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "object_type", kind: "enum", T: proto3.getEnumType(ObjectType), opt: true },
    { no: 4, name: "metadata", kind: "message", T: ObjectMetadata, opt: true },
    { no: 5, name: "properties", kind: "message", T: Properties, opt: true },
    { no: 6, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message index.v1.UpsertObjectResponse
 */
export const UpsertObjectResponse = proto3.makeMessageType(
  "index.v1.UpsertObjectResponse",
  () => [
    { no: 1, name: "object", kind: "message", T: Object$ },
  ],
);

/**
 * @generated from message index.v1.ListObjectsRequest
 */
export const ListObjectsRequest = proto3.makeMessageType(
  "index.v1.ListObjectsRequest",
  () => [
    { no: 1, name: "parent_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "cursor", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message index.v1.ListObjectsResponse
 */
export const ListObjectsResponse = proto3.makeMessageType(
  "index.v1.ListObjectsResponse",
  () => [
    { no: 1, name: "objects", kind: "message", T: Object$, repeated: true },
    { no: 2, name: "next_cursor", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message index.v1.GetObjectsRequest
 */
export const GetObjectsRequest = proto3.makeMessageType(
  "index.v1.GetObjectsRequest",
  () => [
    { no: 1, name: "object_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message index.v1.GetObjectsResponse
 */
export const GetObjectsResponse = proto3.makeMessageType(
  "index.v1.GetObjectsResponse",
  () => [
    { no: 1, name: "objects", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Object$} },
    { no: 2, name: "missing", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message index.v1.DeleteObjectRequest
 */
export const DeleteObjectRequest = proto3.makeMessageType(
  "index.v1.DeleteObjectRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message index.v1.DeleteObjectResponse
 */
export const DeleteObjectResponse = proto3.makeMessageType(
  "index.v1.DeleteObjectResponse",
  () => [
    { no: 1, name: "deleted", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message index.v1.BulkDeleteObjectsRequest
 */
export const BulkDeleteObjectsRequest = proto3.makeMessageType(
  "index.v1.BulkDeleteObjectsRequest",
  () => [
    { no: 1, name: "parent_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message index.v1.BulkDeleteObjectsResponse
 */
export const BulkDeleteObjectsResponse = proto3.makeMessageType(
  "index.v1.BulkDeleteObjectsResponse",
  [],
);

/**
 * @generated from message index.v1.CountObjectsRequest
 */
export const CountObjectsRequest = proto3.makeMessageType(
  "index.v1.CountObjectsRequest",
  () => [
    { no: 1, name: "parent_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message index.v1.CountObjectsResponse
 */
export const CountObjectsResponse = proto3.makeMessageType(
  "index.v1.CountObjectsResponse",
  () => [
    { no: 1, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message index.v1.WebhookRequest
 */
export const WebhookRequest = proto3.makeMessageType(
  "index.v1.WebhookRequest",
  () => [
    { no: 1, name: "object_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "operation", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "body", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * @generated from message index.v1.WebhookResponse
 */
export const WebhookResponse = proto3.makeMessageType(
  "index.v1.WebhookResponse",
  () => [
    { no: 1, name: "body", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * @generated from message index.v1.SearchRequest
 */
export const SearchRequest = proto3.makeMessageType(
  "index.v1.SearchRequest",
  () => [
    { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "roots", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "filter", kind: "message", T: Filter, opt: true },
    { no: 5, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ],
);

/**
 * @generated from message index.v1.SearchResponse
 */
export const SearchResponse = proto3.makeMessageType(
  "index.v1.SearchResponse",
  () => [
    { no: 1, name: "search_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "matches", kind: "message", T: SearchResponse_Match, repeated: true },
    { no: 3, name: "objects", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Object$} },
  ],
);

/**
 * @generated from message index.v1.SearchResponse.Match
 */
export const SearchResponse_Match = proto3.makeMessageType(
  "index.v1.SearchResponse.Match",
  () => [
    { no: 1, name: "match_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "object_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "score", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 5, name: "extra", kind: "message", T: Properties, opt: true },
  ],
  {localName: "SearchResponse_Match"},
);

/**
 * @generated from message index.v1.AnswerRequest
 */
export const AnswerRequest = proto3.makeMessageType(
  "index.v1.AnswerRequest",
  () => [
    { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "roots", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "filter", kind: "message", T: Filter, opt: true },
  ],
);

/**
 * @generated from message index.v1.AnswerResponse
 */
export const AnswerResponse = proto3.makeMessageType(
  "index.v1.AnswerResponse",
  () => [
    { no: 1, name: "answer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "answer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "confidence", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 4, name: "sources", kind: "message", T: Object$, repeated: true },
  ],
);

/**
 * @generated from message index.v1.SearchFeedback
 */
export const SearchFeedback = proto3.makeMessageType(
  "index.v1.SearchFeedback",
  () => [
    { no: 1, name: "search_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "clicked_match_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message index.v1.AnswerFeedback
 */
export const AnswerFeedback = proto3.makeMessageType(
  "index.v1.AnswerFeedback",
  () => [
    { no: 1, name: "answer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "positive_reaction", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message index.v1.FeedbackRequest
 */
export const FeedbackRequest = proto3.makeMessageType(
  "index.v1.FeedbackRequest",
  () => [
    { no: 1, name: "search", kind: "message", T: SearchFeedback, oneof: "feedback" },
    { no: 2, name: "answer", kind: "message", T: AnswerFeedback, oneof: "feedback" },
  ],
);

/**
 * @generated from message index.v1.FeedbackResponse
 */
export const FeedbackResponse = proto3.makeMessageType(
  "index.v1.FeedbackResponse",
  [],
);

/**
 * @generated from message index.v1.ObjectMetadata
 */
export const ObjectMetadata = proto3.makeMessageType(
  "index.v1.ObjectMetadata",
  () => [
    { no: 1, name: "collection", kind: "message", T: CollectionObjectMetadata, oneof: "metadata" },
    { no: 2, name: "text", kind: "message", T: TextObjectMetadata, oneof: "metadata" },
    { no: 3, name: "html", kind: "message", T: HTMLObjectMetadata, oneof: "metadata" },
    { no: 4, name: "image", kind: "message", T: ImageObjectMetadata, oneof: "metadata" },
    { no: 5, name: "pdf", kind: "message", T: PDFObjectMetadata, oneof: "metadata" },
    { no: 6, name: "audio", kind: "message", T: AudioObjectMetadata, oneof: "metadata" },
    { no: 7, name: "slack", kind: "message", T: SlackObjectMetadata, oneof: "metadata" },
  ],
);

/**
 * @generated from message index.v1.CollectionObjectMetadata
 */
export const CollectionObjectMetadata = proto3.makeMessageType(
  "index.v1.CollectionObjectMetadata",
  [],
);

/**
 * @generated from message index.v1.TextObjectMetadata
 */
export const TextObjectMetadata = proto3.makeMessageType(
  "index.v1.TextObjectMetadata",
  () => [
    { no: 1, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message index.v1.HTMLObjectMetadata
 */
export const HTMLObjectMetadata = proto3.makeMessageType(
  "index.v1.HTMLObjectMetadata",
  () => [
    { no: 1, name: "html", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message index.v1.ImageObjectMetadata
 */
export const ImageObjectMetadata = proto3.makeMessageType(
  "index.v1.ImageObjectMetadata",
  () => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "alt", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message index.v1.PDFObjectMetadata
 */
export const PDFObjectMetadata = proto3.makeMessageType(
  "index.v1.PDFObjectMetadata",
  () => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message index.v1.AudioObjectMetadata
 */
export const AudioObjectMetadata = proto3.makeMessageType(
  "index.v1.AudioObjectMetadata",
  () => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message index.v1.SlackObjectMetadata
 */
export const SlackObjectMetadata = proto3.makeMessageType(
  "index.v1.SlackObjectMetadata",
  () => [
    { no: 1, name: "bot_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bot_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message index.v1.Properties
 */
export const Properties = proto3.makeMessageType(
  "index.v1.Properties",
  () => [
    { no: 1, name: "properties", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Property} },
  ],
);

/**
 * @generated from message index.v1.TextArray
 */
export const TextArray = proto3.makeMessageType(
  "index.v1.TextArray",
  () => [
    { no: 1, name: "values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message index.v1.NumberArray
 */
export const NumberArray = proto3.makeMessageType(
  "index.v1.NumberArray",
  () => [
    { no: 1, name: "values", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, repeated: true },
  ],
);

/**
 * @generated from message index.v1.Property
 */
export const Property = proto3.makeMessageType(
  "index.v1.Property",
  () => [
    { no: 2, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "value" },
    { no: 3, name: "number", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, oneof: "value" },
    { no: 4, name: "text_array", kind: "message", T: TextArray, oneof: "value" },
    { no: 5, name: "number_array", kind: "message", T: NumberArray, oneof: "value" },
  ],
);

/**
 * @generated from message index.v1.KeyedProperty
 */
export const KeyedProperty = proto3.makeMessageType(
  "index.v1.KeyedProperty",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "property", kind: "message", T: Property },
  ],
);

/**
 * @generated from message index.v1.Object
 */
export const Object$ = proto3.makeMessageType(
  "index.v1.Object",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "updated_at", kind: "message", T: Timestamp, opt: true },
    { no: 4, name: "parent_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "type", kind: "enum", T: proto3.getEnumType(ObjectType) },
    { no: 6, name: "metadata", kind: "message", T: ObjectMetadata },
    { no: 7, name: "properties", kind: "message", T: Properties },
    { no: 8, name: "status", kind: "enum", T: proto3.getEnumType(ObjectStatus) },
    { no: 9, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
  {localName: "Object$"},
);

/**
 * @generated from message index.v1.Filter
 */
export const Filter = proto3.makeMessageType(
  "index.v1.Filter",
  () => [
    { no: 1, name: "conditions", kind: "message", T: Condition, repeated: true },
  ],
);

/**
 * @generated from message index.v1.Range
 */
export const Range = proto3.makeMessageType(
  "index.v1.Range",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "lt", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
    { no: 3, name: "lte", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
    { no: 4, name: "gt", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
    { no: 5, name: "gte", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
  ],
);

/**
 * @generated from message index.v1.Condition
 */
export const Condition = proto3.makeMessageType(
  "index.v1.Condition",
  () => [
    { no: 1, name: "property", kind: "message", T: KeyedProperty, oneof: "condition" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "condition" },
    { no: 3, name: "and", kind: "message", T: Filter, oneof: "condition" },
    { no: 4, name: "or", kind: "message", T: Filter, oneof: "condition" },
    { no: 5, name: "not", kind: "message", T: Filter, oneof: "condition" },
  ],
);

