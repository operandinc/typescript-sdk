// @generated by protoc-gen-es v0.1.1 with parameter "target=ts+js"
// @generated from file web/v1/user.proto (package web.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3, Timestamp} from "@bufbuild/protobuf";
import {UserProfile} from "../../operand/v1/object_pb.js";

/**
 * @generated from enum web.v1.TokenKind
 */
export enum TokenKind {
  /**
   * @generated from enum value: TOKEN_KIND_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TOKEN_KIND_LOGIN = 1;
   */
  LOGIN = 1,

  /**
   * @generated from enum value: TOKEN_KIND_SESSION = 2;
   */
  SESSION = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(TokenKind)
proto3.util.setEnumType(TokenKind, "web.v1.TokenKind", [
  { no: 0, name: "TOKEN_KIND_UNSPECIFIED" },
  { no: 1, name: "TOKEN_KIND_LOGIN" },
  { no: 2, name: "TOKEN_KIND_SESSION" },
]);

/**
 * @generated from enum web.v1.BillingPlan
 */
export enum BillingPlan {
  /**
   * @generated from enum value: BILLING_PLAN_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: BILLING_PLAN_FREE = 1;
   */
  FREE = 1,

  /**
   * @generated from enum value: BILLING_PLAN_PRO = 2;
   */
  PRO = 2,

  /**
   * @generated from enum value: BILLING_PLAN_TEAMS = 3;
   */
  TEAMS = 3,

  /**
   * @generated from enum value: BILLING_PLAN_ENTERPRISE = 4;
   */
  ENTERPRISE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(BillingPlan)
proto3.util.setEnumType(BillingPlan, "web.v1.BillingPlan", [
  { no: 0, name: "BILLING_PLAN_UNSPECIFIED" },
  { no: 1, name: "BILLING_PLAN_FREE" },
  { no: 2, name: "BILLING_PLAN_PRO" },
  { no: 3, name: "BILLING_PLAN_TEAMS" },
  { no: 4, name: "BILLING_PLAN_ENTERPRISE" },
]);

/**
 * @generated from enum web.v1.OAuthProvider
 */
export enum OAuthProvider {
  /**
   * @generated from enum value: O_AUTH_PROVIDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: O_AUTH_PROVIDER_GITHUB = 1;
   */
  GITHUB = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(OAuthProvider)
proto3.util.setEnumType(OAuthProvider, "web.v1.OAuthProvider", [
  { no: 0, name: "O_AUTH_PROVIDER_UNSPECIFIED" },
  { no: 1, name: "O_AUTH_PROVIDER_GITHUB" },
]);

/**
 * @generated from message web.v1.LoginRequest
 */
export class LoginRequest extends Message<LoginRequest> {
  /**
   * @generated from field: string email = 1;
   */
  email = "";

  /**
   * @generated from field: string redirect_url = 2;
   */
  redirectUrl = "";

  constructor(data?: PartialMessage<LoginRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.LoginRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "redirect_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginRequest {
    return new LoginRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginRequest {
    return new LoginRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginRequest {
    return new LoginRequest().fromJsonString(jsonString, options);
  }

  static equals(a: LoginRequest | PlainMessage<LoginRequest> | undefined, b: LoginRequest | PlainMessage<LoginRequest> | undefined): boolean {
    return proto3.util.equals(LoginRequest, a, b);
  }
}

/**
 * @generated from message web.v1.LoginResponse
 */
export class LoginResponse extends Message<LoginResponse> {
  /**
   * @generated from field: google.protobuf.Timestamp challenge_sent_at = 1;
   */
  challengeSentAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp challenge_expires_at = 2;
   */
  challengeExpiresAt?: Timestamp;

  constructor(data?: PartialMessage<LoginResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.LoginResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "challenge_sent_at", kind: "message", T: Timestamp },
    { no: 2, name: "challenge_expires_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginResponse {
    return new LoginResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginResponse {
    return new LoginResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginResponse {
    return new LoginResponse().fromJsonString(jsonString, options);
  }

  static equals(a: LoginResponse | PlainMessage<LoginResponse> | undefined, b: LoginResponse | PlainMessage<LoginResponse> | undefined): boolean {
    return proto3.util.equals(LoginResponse, a, b);
  }
}

/**
 * @generated from message web.v1.FinalizeLoginRequest
 */
export class FinalizeLoginRequest extends Message<FinalizeLoginRequest> {
  /**
   * @generated from field: string challenge = 1;
   */
  challenge = "";

  constructor(data?: PartialMessage<FinalizeLoginRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.FinalizeLoginRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "challenge", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FinalizeLoginRequest {
    return new FinalizeLoginRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FinalizeLoginRequest {
    return new FinalizeLoginRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FinalizeLoginRequest {
    return new FinalizeLoginRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FinalizeLoginRequest | PlainMessage<FinalizeLoginRequest> | undefined, b: FinalizeLoginRequest | PlainMessage<FinalizeLoginRequest> | undefined): boolean {
    return proto3.util.equals(FinalizeLoginRequest, a, b);
  }
}

/**
 * @generated from message web.v1.Token
 */
export class Token extends Message<Token> {
  /**
   * @generated from field: string token = 1;
   */
  token = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expires_at = 3;
   */
  expiresAt?: Timestamp;

  /**
   * @generated from field: web.v1.TokenKind kind = 4;
   */
  kind = TokenKind.UNSPECIFIED;

  constructor(data?: PartialMessage<Token>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.Token";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "expires_at", kind: "message", T: Timestamp },
    { no: 4, name: "kind", kind: "enum", T: proto3.getEnumType(TokenKind) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Token {
    return new Token().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Token {
    return new Token().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Token {
    return new Token().fromJsonString(jsonString, options);
  }

  static equals(a: Token | PlainMessage<Token> | undefined, b: Token | PlainMessage<Token> | undefined): boolean {
    return proto3.util.equals(Token, a, b);
  }
}

/**
 * @generated from message web.v1.FinalizeLoginResponse
 */
export class FinalizeLoginResponse extends Message<FinalizeLoginResponse> {
  /**
   * @generated from field: web.v1.Token session = 1;
   */
  session?: Token;

  constructor(data?: PartialMessage<FinalizeLoginResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.FinalizeLoginResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "session", kind: "message", T: Token },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FinalizeLoginResponse {
    return new FinalizeLoginResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FinalizeLoginResponse {
    return new FinalizeLoginResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FinalizeLoginResponse {
    return new FinalizeLoginResponse().fromJsonString(jsonString, options);
  }

  static equals(a: FinalizeLoginResponse | PlainMessage<FinalizeLoginResponse> | undefined, b: FinalizeLoginResponse | PlainMessage<FinalizeLoginResponse> | undefined): boolean {
    return proto3.util.equals(FinalizeLoginResponse, a, b);
  }
}

/**
 * @generated from message web.v1.GetProfileRequest
 */
export class GetProfileRequest extends Message<GetProfileRequest> {
  /**
   * @generated from field: optional string handle = 1;
   */
  handle?: string;

  /**
   * @generated from field: optional bool include_social_stats = 2;
   */
  includeSocialStats?: boolean;

  constructor(data?: PartialMessage<GetProfileRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.GetProfileRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "handle", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "include_social_stats", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProfileRequest {
    return new GetProfileRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProfileRequest {
    return new GetProfileRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProfileRequest {
    return new GetProfileRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetProfileRequest | PlainMessage<GetProfileRequest> | undefined, b: GetProfileRequest | PlainMessage<GetProfileRequest> | undefined): boolean {
    return proto3.util.equals(GetProfileRequest, a, b);
  }
}

/**
 * @generated from message web.v1.SocialStats
 */
export class SocialStats extends Message<SocialStats> {
  /**
   * @generated from field: int32 indexes = 1;
   */
  indexes = 0;

  /**
   * @generated from field: int32 subscribers = 2;
   */
  subscribers = 0;

  constructor(data?: PartialMessage<SocialStats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.SocialStats";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "indexes", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "subscribers", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SocialStats {
    return new SocialStats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SocialStats {
    return new SocialStats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SocialStats {
    return new SocialStats().fromJsonString(jsonString, options);
  }

  static equals(a: SocialStats | PlainMessage<SocialStats> | undefined, b: SocialStats | PlainMessage<SocialStats> | undefined): boolean {
    return proto3.util.equals(SocialStats, a, b);
  }
}

/**
 * @generated from message web.v1.GetProfileResponse
 */
export class GetProfileResponse extends Message<GetProfileResponse> {
  /**
   * @generated from field: operand.v1.UserProfile profile = 1;
   */
  profile?: UserProfile;

  /**
   * @generated from field: bool is_current_user = 2;
   */
  isCurrentUser = false;

  /**
   * @generated from field: optional web.v1.SocialStats social_stats = 3;
   */
  socialStats?: SocialStats;

  constructor(data?: PartialMessage<GetProfileResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.GetProfileResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "profile", kind: "message", T: UserProfile },
    { no: 2, name: "is_current_user", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "social_stats", kind: "message", T: SocialStats, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProfileResponse {
    return new GetProfileResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProfileResponse {
    return new GetProfileResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProfileResponse {
    return new GetProfileResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetProfileResponse | PlainMessage<GetProfileResponse> | undefined, b: GetProfileResponse | PlainMessage<GetProfileResponse> | undefined): boolean {
    return proto3.util.equals(GetProfileResponse, a, b);
  }
}

/**
 * @generated from message web.v1.UpdateProfileRequest
 */
export class UpdateProfileRequest extends Message<UpdateProfileRequest> {
  /**
   * @generated from field: optional string handle = 1;
   */
  handle?: string;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional string bio = 3;
   */
  bio?: string;

  /**
   * @generated from field: optional string avatar_url = 4;
   */
  avatarUrl?: string;

  constructor(data?: PartialMessage<UpdateProfileRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.UpdateProfileRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "handle", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "bio", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "avatar_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProfileRequest {
    return new UpdateProfileRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProfileRequest {
    return new UpdateProfileRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProfileRequest {
    return new UpdateProfileRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateProfileRequest | PlainMessage<UpdateProfileRequest> | undefined, b: UpdateProfileRequest | PlainMessage<UpdateProfileRequest> | undefined): boolean {
    return proto3.util.equals(UpdateProfileRequest, a, b);
  }
}

/**
 * @generated from message web.v1.UpdateProfileResponse
 */
export class UpdateProfileResponse extends Message<UpdateProfileResponse> {
  /**
   * @generated from field: operand.v1.UserProfile profile = 1;
   */
  profile?: UserProfile;

  constructor(data?: PartialMessage<UpdateProfileResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.UpdateProfileResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "profile", kind: "message", T: UserProfile },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProfileResponse {
    return new UpdateProfileResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProfileResponse {
    return new UpdateProfileResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProfileResponse {
    return new UpdateProfileResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateProfileResponse | PlainMessage<UpdateProfileResponse> | undefined, b: UpdateProfileResponse | PlainMessage<UpdateProfileResponse> | undefined): boolean {
    return proto3.util.equals(UpdateProfileResponse, a, b);
  }
}

/**
 * @generated from message web.v1.BillingStatusRequest
 */
export class BillingStatusRequest extends Message<BillingStatusRequest> {
  constructor(data?: PartialMessage<BillingStatusRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.BillingStatusRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BillingStatusRequest {
    return new BillingStatusRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BillingStatusRequest {
    return new BillingStatusRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BillingStatusRequest {
    return new BillingStatusRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BillingStatusRequest | PlainMessage<BillingStatusRequest> | undefined, b: BillingStatusRequest | PlainMessage<BillingStatusRequest> | undefined): boolean {
    return proto3.util.equals(BillingStatusRequest, a, b);
  }
}

/**
 * @generated from message web.v1.BillingStatusResponse
 */
export class BillingStatusResponse extends Message<BillingStatusResponse> {
  /**
   * @generated from field: string stripe_customer_id = 1;
   */
  stripeCustomerId = "";

  /**
   * @generated from field: web.v1.BillingPlan plan = 2;
   */
  plan = BillingPlan.UNSPECIFIED;

  /**
   * @generated from field: int32 active_pages = 3;
   */
  activePages = 0;

  /**
   * @generated from field: optional int32 page_limit = 4;
   */
  pageLimit?: number;

  constructor(data?: PartialMessage<BillingStatusResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.BillingStatusResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stripe_customer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "plan", kind: "enum", T: proto3.getEnumType(BillingPlan) },
    { no: 3, name: "active_pages", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "page_limit", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BillingStatusResponse {
    return new BillingStatusResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BillingStatusResponse {
    return new BillingStatusResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BillingStatusResponse {
    return new BillingStatusResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BillingStatusResponse | PlainMessage<BillingStatusResponse> | undefined, b: BillingStatusResponse | PlainMessage<BillingStatusResponse> | undefined): boolean {
    return proto3.util.equals(BillingStatusResponse, a, b);
  }
}

/**
 * @generated from message web.v1.ConfigureBillingRequest
 */
export class ConfigureBillingRequest extends Message<ConfigureBillingRequest> {
  /**
   * @generated from field: web.v1.BillingPlan plan = 1;
   */
  plan = BillingPlan.UNSPECIFIED;

  /**
   * @generated from field: optional string success_url = 2;
   */
  successUrl?: string;

  /**
   * @generated from field: optional string cancel_url = 3;
   */
  cancelUrl?: string;

  constructor(data?: PartialMessage<ConfigureBillingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.ConfigureBillingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "plan", kind: "enum", T: proto3.getEnumType(BillingPlan) },
    { no: 2, name: "success_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "cancel_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigureBillingRequest {
    return new ConfigureBillingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigureBillingRequest {
    return new ConfigureBillingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigureBillingRequest {
    return new ConfigureBillingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ConfigureBillingRequest | PlainMessage<ConfigureBillingRequest> | undefined, b: ConfigureBillingRequest | PlainMessage<ConfigureBillingRequest> | undefined): boolean {
    return proto3.util.equals(ConfigureBillingRequest, a, b);
  }
}

/**
 * @generated from message web.v1.ConfigureBillingResponse
 */
export class ConfigureBillingResponse extends Message<ConfigureBillingResponse> {
  /**
   * @generated from field: string checkout_link = 1;
   */
  checkoutLink = "";

  constructor(data?: PartialMessage<ConfigureBillingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.ConfigureBillingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "checkout_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigureBillingResponse {
    return new ConfigureBillingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigureBillingResponse {
    return new ConfigureBillingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigureBillingResponse {
    return new ConfigureBillingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ConfigureBillingResponse | PlainMessage<ConfigureBillingResponse> | undefined, b: ConfigureBillingResponse | PlainMessage<ConfigureBillingResponse> | undefined): boolean {
    return proto3.util.equals(ConfigureBillingResponse, a, b);
  }
}

/**
 * @generated from message web.v1.ManageBillingRequest
 */
export class ManageBillingRequest extends Message<ManageBillingRequest> {
  constructor(data?: PartialMessage<ManageBillingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.ManageBillingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManageBillingRequest {
    return new ManageBillingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManageBillingRequest {
    return new ManageBillingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManageBillingRequest {
    return new ManageBillingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ManageBillingRequest | PlainMessage<ManageBillingRequest> | undefined, b: ManageBillingRequest | PlainMessage<ManageBillingRequest> | undefined): boolean {
    return proto3.util.equals(ManageBillingRequest, a, b);
  }
}

/**
 * @generated from message web.v1.ManageBillingResponse
 */
export class ManageBillingResponse extends Message<ManageBillingResponse> {
  /**
   * @generated from field: string billing_link = 1;
   */
  billingLink = "";

  constructor(data?: PartialMessage<ManageBillingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.ManageBillingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "billing_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManageBillingResponse {
    return new ManageBillingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManageBillingResponse {
    return new ManageBillingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManageBillingResponse {
    return new ManageBillingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ManageBillingResponse | PlainMessage<ManageBillingResponse> | undefined, b: ManageBillingResponse | PlainMessage<ManageBillingResponse> | undefined): boolean {
    return proto3.util.equals(ManageBillingResponse, a, b);
  }
}

/**
 * @generated from message web.v1.OAuthLinkRequest
 */
export class OAuthLinkRequest extends Message<OAuthLinkRequest> {
  /**
   * @generated from field: web.v1.OAuthProvider provider = 1;
   */
  provider = OAuthProvider.UNSPECIFIED;

  /**
   * @generated from field: string redirect_url = 2;
   */
  redirectUrl = "";

  constructor(data?: PartialMessage<OAuthLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.OAuthLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "provider", kind: "enum", T: proto3.getEnumType(OAuthProvider) },
    { no: 2, name: "redirect_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OAuthLinkRequest {
    return new OAuthLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OAuthLinkRequest {
    return new OAuthLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OAuthLinkRequest {
    return new OAuthLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: OAuthLinkRequest | PlainMessage<OAuthLinkRequest> | undefined, b: OAuthLinkRequest | PlainMessage<OAuthLinkRequest> | undefined): boolean {
    return proto3.util.equals(OAuthLinkRequest, a, b);
  }
}

/**
 * @generated from message web.v1.OAuthLink
 */
export class OAuthLink extends Message<OAuthLink> {
  /**
   * @generated from field: string public_id = 1;
   */
  publicId = "";

  /**
   * @generated from field: web.v1.OAuthProvider provider = 2;
   */
  provider = OAuthProvider.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * Note: We don't return refresh_token or expires_at here, since it's purely an internal thing.
   *
   * @generated from field: string access_token = 4;
   */
  accessToken = "";

  constructor(data?: PartialMessage<OAuthLink>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.OAuthLink";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "public_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "provider", kind: "enum", T: proto3.getEnumType(OAuthProvider) },
    { no: 3, name: "created_at", kind: "message", T: Timestamp },
    { no: 4, name: "access_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OAuthLink {
    return new OAuthLink().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OAuthLink {
    return new OAuthLink().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OAuthLink {
    return new OAuthLink().fromJsonString(jsonString, options);
  }

  static equals(a: OAuthLink | PlainMessage<OAuthLink> | undefined, b: OAuthLink | PlainMessage<OAuthLink> | undefined): boolean {
    return proto3.util.equals(OAuthLink, a, b);
  }
}

/**
 * @generated from message web.v1.OAuthLinkResponse
 */
export class OAuthLinkResponse extends Message<OAuthLinkResponse> {
  /**
   * @generated from oneof web.v1.OAuthLinkResponse.resp
   */
  resp: {
    /**
     * @generated from field: string setup_url = 1;
     */
    value: string;
    case: "setupUrl";
  } | {
    /**
     * @generated from field: web.v1.OAuthLink existing = 2;
     */
    value: OAuthLink;
    case: "existing";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<OAuthLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "web.v1.OAuthLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "setup_url", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "resp" },
    { no: 2, name: "existing", kind: "message", T: OAuthLink, oneof: "resp" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OAuthLinkResponse {
    return new OAuthLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OAuthLinkResponse {
    return new OAuthLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OAuthLinkResponse {
    return new OAuthLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OAuthLinkResponse | PlainMessage<OAuthLinkResponse> | undefined, b: OAuthLinkResponse | PlainMessage<OAuthLinkResponse> | undefined): boolean {
    return proto3.util.equals(OAuthLinkResponse, a, b);
  }
}

